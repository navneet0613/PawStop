/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.nscompany.pawstop;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Lenovo
 */
public class Appointment_a extends javax.swing.JInternalFrame {
ConnectionClass cn1=new ConnectionClass.getInstance();
    
    public Appointment_a() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI uii=(BasicInternalFrameUI)this.getUI();
        uii.setNorthPane(null);
        
         add.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && add.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
          name.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && name.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
           gender.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && gender.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
            species.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && species.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
             breed.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && breed.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
              purr.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && purr.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
               sym.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && sym.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
               oname.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && oname.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
     phoneno.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && phoneno.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
      mail.addKeyListener(new KeyAdapter() {
    @Override
    public void keyTyped(KeyEvent e) {
       
        char c = e.getKeyChar();       
        if (c == ' ' && mail.getText().isEmpty()) {
            
            e.consume();
        }
    }
});
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        apdt = new com.toedter.calendar.JDateChooser();
        dob = new com.toedter.calendar.JDateChooser();
        sym = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        gender = new javax.swing.JTextField();
        species = new javax.swing.JTextField();
        purr = new javax.swing.JTextField();
        breed = new javax.swing.JTextField();
        oname = new javax.swing.JTextField();
        phoneno = new javax.swing.JTextField();
        mail = new javax.swing.JTextField();
        add = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBorder(null);
        setMaximumSize(new java.awt.Dimension(1150, 734));
        setMinimumSize(new java.awt.Dimension(1150, 734));
        setPreferredSize(new java.awt.Dimension(1150, 734));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(52, 139, 227));
        jLabel2.setText("Owner Details");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(870, 490, 140, 50);

        jLabel1.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(52, 139, 227));
        jLabel1.setText("Pet Details");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(90, 160, 140, 40);

        apdt.setMinSelectableDate(new java.util.Date(-62135785719000L));
        apdt.setOpaque(false);
        jPanel1.add(apdt);
        apdt.setBounds(780, 270, 260, 30);

        dob.setToolTipText("");
        jPanel1.add(dob);
        dob.setBounds(320, 220, 260, 30);
        jPanel1.add(sym);
        sym.setBounds(320, 270, 260, 30);
        jPanel1.add(name);
        name.setBounds(320, 110, 260, 30);
        jPanel1.add(gender);
        gender.setBounds(780, 110, 260, 30);
        jPanel1.add(species);
        species.setBounds(320, 170, 260, 30);
        jPanel1.add(purr);
        purr.setBounds(780, 220, 260, 30);
        jPanel1.add(breed);
        breed.setBounds(780, 160, 260, 30);
        jPanel1.add(oname);
        oname.setBounds(530, 430, 270, 30);
        jPanel1.add(phoneno);
        phoneno.setBounds(530, 490, 270, 30);
        jPanel1.add(mail);
        mail.setBounds(530, 540, 270, 30);
        jPanel1.add(add);
        add.setBounds(530, 590, 270, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Name");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(400, 430, 80, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Phone No");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(400, 490, 110, 20);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("E-mail");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(400, 550, 80, 17);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Address");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(400, 590, 80, 20);

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setFont(new java.awt.Font("Nirmala UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SUBMIT");
        jButton1.setToolTipText("Book your appointment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(460, 660, 270, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bb.png"))); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(60, 390, 1060, 320);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Name");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(220, 120, 70, 20);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Species");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(210, 170, 70, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Date of Birth");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(190, 230, 100, 20);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Symptoms/Disease");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(180, 280, 150, 20);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Gender");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(660, 120, 70, 17);

        jLabel14.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel14.setText("Breed");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(660, 160, 60, 40);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Purpose of visit");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(650, 220, 100, 17);

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Appointment date");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(640, 270, 130, 20);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bb.png"))); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(70, 50, 1060, 320);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, -30, 1260, 780);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit
         String regex = "^(?=.{1,64}@)[\\p{L}0-9_-]+(\\.[\\p{L}0-9_-]+)*@" 
        + "[^-][\\p{L}0-9-]+(\\.[\\p{L}0-9-]+)*(\\.[\\p{L}]{2,})$";
         Pattern pattern = Pattern.compile(regex); 
        Matcher matcher = pattern.matcher(mail.getText());
        
         String phoneRE = "[0-9]+";
         Pattern phonePattern = Pattern.compile(phoneRE);
          Matcher phoneMatcher = phonePattern.matcher(phoneno.getText()); 
        
        
        if(name.getText().isEmpty()){
             JOptionPane.showMessageDialog(rootPane,"Name cannot be empty");
        }else if(dob.getDate()==null){
            JOptionPane.showMessageDialog(rootPane,"Choose date of birth");
        }else if(breed.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Breed cannot ne empty"); 
        }else if(apdt.getDate()==null){
             JOptionPane.showMessageDialog(rootPane,"Choose appointment date");
        }else if(gender.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Gender cannot be empty "); 
        }else if(species.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Species cannot be empty");
        }else if(purr.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Enter purpose of your visit");
        }else if(sym.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Cannot be empty, enter NONE if required");
        }else if(oname.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Enter your name"); 
        }else if(phoneno.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Enter contact information");
        }else if(phoneMatcher.matches()==false){
            JOptionPane.showMessageDialog(rootPane,"Enter digits for Phone No."); 
        } else if(phoneno.getText().length()!=10){
            JOptionPane.showMessageDialog(rootPane,"Enter valid phone number");
        }else if(mail.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Email cannot be empty"); 
        }else if(matcher.matches()== false){
            JOptionPane.showMessageDialog(rootPane,"Enter VALID Email");
        }else if(add.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Address cannot be empty"); 
        }else{
             String INSERTDB3="INSERT INTO appointment( name,gender,species,breed,dob,purposeofvisit,symptom,dateofapp,oname,phoneno,email,address)"+" VALUES(?,?,?,?,?,?,?,?,?,?,?,?)";
           try{
              PreparedStatement ps=cn1.connection.prepareCall(INSERTDB3);
               ps.setString(1, name.getText().toString());
              ps.setString(2, gender.getText().toString());
               ps.setString(3, species.getText().toString());
              ps.setString(4, breed.getText().toString());              
               ps.setString(5, dob.getDate().toString());
               ps.setString(6, purr.getText().toString());
               ps.setString(7, sym.getText().toString());
               ps.setString(8, apdt.getDate().toString());
               ps.setString(9, oname.getText().toString());                  
               ps.setString(10, phoneno.getText().toString());
               ps.setString(11, mail.getText().toString());
               ps.setString(12, add.getText().toString());

               Boolean isAdded=ps.execute();
               JOptionPane.showMessageDialog(rootPane,"Successful!");
              if(isAdded==true){
                   
                   System.out.println("Successfully");
              }
            }
            catch(SQLException sqlException){
                System.out.println("Error Message"+sqlException.getMessage());
            }
        }  
    }//GEN-LAST:event_submit


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField add;
    private com.toedter.calendar.JDateChooser apdt;
    private javax.swing.JTextField breed;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JTextField gender;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mail;
    private javax.swing.JTextField name;
    private javax.swing.JTextField oname;
    private javax.swing.JTextField phoneno;
    private javax.swing.JTextField purr;
    private javax.swing.JTextField species;
    private javax.swing.JTextField sym;
    // End of variables declaration//GEN-END:variables
}
